---

#########
# Clone #
#########

- name: Checking project options validity
  fail:
    msg: Project repository or name is missing, can't continue
  when:
    - project.repo is not defined or project.repo == ""
    - project.name is not defined or project.name == ""

- name: "Create {{ project_directory }} directory"
  file:
    path: "{{ project_directory }}"
    state: directory
    recurse: yes

- debug:
    msg: "Will use ssh key {{ projects_ssh_keys[project.ssh_key] }} to clone {{ project.name }}"
  when: project.ssh_key is defined

- name: Checkin project existence
  stat:
    path: "{{ project_directory }}"
  register: project_directory_check

- name: "Cloning project {{ project.name }}"
  git:
    repo: "{{ project.repo }}"
    dest: "{{ project_directory }}"
    update: no
    key_file: "{{ projects_ssh_keys[project.ssh_key] if (project.ssh_key is defined) else omit }}"
    accept_hostkey: yes
    version: master
  when: not project_directory_check.stat.exists

############
# Env file #
############

- name: Validating env template existence
  stat:
    path: "{{ project_directory }}/{{ project.env_file | default(projects_default_env_tpl) }}"
  register: project_env_file
  when:
    - project.setup_env is defined
    - project.setup_env

- name: Setup env files
  file:
    src: "{{ project_directory }}/{{ project.env_file | default(projects_default_env_tpl) }}"
    dest: "{{ project_directory }}/.env"
    force: no
  when:
    - project.setup_env is defined
    - project.setup_env
    - project_env_file.stat.exists

- debug:
    msg: "Env file {{ project.env_file | default(projects_default_env_tpl) }} is missing for {{ project.name }}"
  when:
    - project.setup_env is defined
    - project.setup_env
    - project_env_file.stat.exists == False

##########
# Direnv #
##########

- name: Setup direnv files
  template:
    src: direnv/envrc.j2
    dest: "{{ project_directory }}/.envrc"
    force: no
  when: project.with_direnv is defined and project.with_direnv
  notify: Allow in direnv

