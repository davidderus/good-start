{% if dotfiles_devlog_enabled %}
###################
# Devlog handling #
###################

export DEVLOG_DIR="{{ dotfiles_devlog_directory }}"

# Creates a devlog directory for the current user and init a Caddyfile for easier devlog browsing
# Usage: `devlog_init`
devlog_init() {
  mkdir -p $DEVLOG_DIR
  echo "localhost:2020\ngzip\nbrowse\nmarkdown { ext .md .txt }" > $DEVLOG_DIR/Caddyfile
}

# Creates or opens a post
# Post path: $HOME/Devlog/$WEEK_NUMBER/$DATE-$NAME.md
# Usage: `devlog_post MyApp`
devlog_post() {
  dev_dir=$(date +"$DEVLOG_DIR/S%V")
  mkdir -p $dev_dir
  filename=$(date +"$dev_dir/%Y-%m-%d-$1.md" | sed 's/ /-/g')
  vim $filename
}

# Serves the Devlog thanks to Caddy
# Usage: devlog_serve
devlog_serve() {
  cd $DEVLOG_DIR
  caddy
}

# Searches a string in the Devlog
# Usage: `devlog_search foobar`
devlog_search() {
  ag -i --markdown $1 $DEVLOG_DIR/
}

# DEPRECATED
# unalias devlog
{% endif %}

#############
# Utilities #
#############

# Replace a pattern by another globally in a set of files without backups
# WARNING: Always diff the result to prevent some mistakes
#
# Usage: sed_in_place 0.3.9 0.3.10 bower.json package.json app/scripts/config.js
sed_in_place() {
  sed -i '' -e "s/$1/$2/g" ${@:3}
}

# ssh-config reads your ssh-config and find a given key for an host or its entire config
#
# Usage:
# ssh-config neo #=> Returns the full config for the neo host
# ssh-config neo user #=> Returns the username for host neo
ssh-config() {
  local hostname=$1
  local config_key=$2
  local value=$(sed -n "/Host $hostname/,/Host/p" ~/.ssh/config)

  if [[ -n $config_key ]]; then
    local new_value=$(echo $value | grep -i "  $config_key " | cut  -d ' ' -f 4)

    if [[ -n $new_value ]]; then value=$new_value; fi
  fi

  echo $value
}
